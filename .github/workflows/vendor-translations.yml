name: Vendor Translation Management

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron: '*/5 * * * *'  # Test schedule - will be '0 0 14,28 * *' in production
  pull_request:
    types: [opened, synchronize, closed]
    branches: ['main']
    paths: ['vendor-translations/**']
  workflow_dispatch:

jobs:
  create-vendor-package:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Set date
        id: vars
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Download Previous Vendor Translations
        id: download-previous
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: vendor-translations-latest
          path: previous-translations

      - name: Create Vendor Package
        id: create-package
        run: |
          TEMP_DIR="vendor-package-${{ steps.vars.outputs.date }}"
          mkdir -p "$TEMP_DIR"
          
          # Copy current English file
          cp src/main/resources/messages_en.properties "$TEMP_DIR/"
          
          # Copy previous vendor translations if they exist
          if [ -d "previous-translations" ] && [ -n "$(ls -A previous-translations)" ]; then
            cp previous-translations/*.properties "$TEMP_DIR/" || echo "WARNING: Some previous translations couldn't be copied"
            rm -f "$TEMP_DIR/messages_en.properties"
          fi
          
          echo "Package contents:"
          ls -la "$TEMP_DIR"

      - name: Upload Vendor Package
        uses: actions/upload-artifact@v3
        with:
          name: vendor-package-${{ steps.vars.outputs.date }}
          path: vendor-package-${{ steps.vars.outputs.date }}
          retention-days: 90

  process-translations:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Copy Translations to Resources
        run: |
          cp -f vendor-translations/*.properties src/main/resources/
          echo "Copied translations to resources directory"

      - name: Generate GitHub App Token
        id: generate-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_APP_PRIVATE_KEY }}
          installation_retrieval_mode: 'repository'

      - name: Create Resource Update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: "ðŸ”„: Update resource translations"
          title: "ðŸ”„: Update resource translations from vendor"
          body: |
            Updates resource translations from vendor-translations folder
            Original PR: #${{ github.event.pull_request.number }}
          branch: update-resources-${{ github.event.pull_request.number }}
          base: ${{ github.head_ref }}
          labels: resource-update
          reviewers: |
            Ashutoshsk

  store-vendor-translations:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Set date
        id: vars
        run: |
          echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Sync Translations
        run: |
          git fetch origin ${{ github.event.pull_request.head.ref }}
          git checkout origin/${{ github.event.pull_request.head.ref }} -- vendor-translations/
          git add vendor-translations/

      - name: Verify Translation Files
        run: |
          EXIT_CODE=0
          for file in vendor-translations/*.properties; do
            if [ ! -f "$file" ]; then
              echo "ERROR: Failed to read $file"
              EXIT_CODE=1
              continue
            fi
          
            if ! grep -q "=" "$file"; then
              echo "ERROR: Invalid format in $file - no property assignments found"
              EXIT_CODE=1
              continue
            fi
          
            echo "Verified: $file"
          done
          
          if [ $EXIT_CODE -ne 0 ]; then
            echo "ERROR: One or more translation files failed verification"
            exit 1
          fi
          
          echo "All vendor translation files verified successfully"

      - name: Store Current Translations
        uses: actions/upload-artifact@v3
        with:
          name: vendor-translations-${{ steps.vars.outputs.date }}
          path: vendor-translations/
          retention-days: 90

      - name: Store as Latest Version
        uses: actions/upload-artifact@v3
        with:
          name: vendor-translations-latest
          path: vendor-translations/
          retention-days: 90