name: Translation Automation

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  translation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Fetch base branch
        run: |
          git remote add upstream ${{ github.event.pull_request.base.repo.clone_url }}
          git fetch upstream ${{ github.event.pull_request.base.ref }}

      - name: Verify SHAs
        run: |
          git rev-parse ${{ github.event.pull_request.base.sha }}
          git rev-parse ${{ github.event.pull_request.head.sha }}

      - name: Print branch info
        run: |
          echo "Base ref: ${{ github.event.pull_request.base.ref }}"
          echo "Head ref: ${{ github.event.pull_request.head.ref }}"
          echo "Base sha: ${{ github.event.pull_request.base.sha }}"
          echo "Head sha: ${{ github.event.pull_request.head.sha }}"

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -q "src/main/resources/messages_en.properties"; then
            echo "properties_changed=true" >> $GITHUB_OUTPUT
          else
            echo "properties_changed=false" >> $GITHUB_OUTPUT
          fi
          if git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -q "src/main/resources/glossaries/glossaries_.*\.csv"; then
            echo "glossaries_changed=true" >> $GITHUB_OUTPUT
            echo "changed_glossaries=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep "glossaries_.*\.csv" | sed -E 's/.*glossaries_([a-z]{2})\.csv/\1/' | tr '\n' ',' | sed 's/,$//')" >> $GITHUB_OUTPUT
          else
            echo "glossaries_changed=false" >> $GITHUB_OUTPUT
            echo "changed_glossaries=" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Translation in DTMmock
        if: ${{ steps.check-changes.outputs.properties_changed == 'true' || steps.check-changes.outputs.glossaries_changed == 'true' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WORKFLOW_TOKEN }}
          script: |
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: 'DTMmock',
                workflow_id: 'translate.yml',
                ref: 'main',
                inputs: {
                  properties_changed: '${{ steps.check-changes.outputs.properties_changed }}',
                  glossaries_changed: '${{ steps.check-changes.outputs.glossaries_changed }}',
                  changed_glossaries: '${{ steps.check-changes.outputs.changed_glossaries }}',
                  source_branch: '${{ github.event.pull_request.head.ref }}'
                }
              });
              console.log('Successfully triggered workflow');
            } catch (error) {
              core.setFailed(`Failed to trigger workflow: ${error.message}`);
            }

      - name: Check for Artifacts
        if: ${{ steps.check-changes.outputs.properties_changed == 'true' || steps.check-changes.outputs.glossaries_changed == 'true' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WORKFLOW_TOKEN }}
          script: |
            const response = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: 'DTMmock',
              workflow_id: 'translate.yml',
              branch: 'main'
            });
            
            const run = response.data.workflow_runs[0];
            if (!run || run.status !== 'completed' || run.conclusion !== 'success') {
              throw new Error("The triggered workflow did not complete successfully or there are no artifacts available.");
            }
            
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: 'DTMmock',
              run_id: run.id,
            });
            
            if (artifacts.data.total_count === 0) {
              throw new Error("No artifacts were found for the completed workflow run.");
            }
            console.log(`Artifact "${artifacts.data.artifacts[0].name}" found.`);


      - name: Wait for Translation to Complete
        if: ${{ steps.check-changes.outputs.properties_changed == 'true' || steps.check-changes.outputs.glossaries_changed == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            const waitForWorkflow = async () => {
              const workflowId = 'translate.yml';
              const branchName = 'main';
              const repoOwner = context.repo.owner;
              const repoName = 'DTMmock';

              let completed = false;
              while (!completed) {
                // List recent workflow runs
                const response = await github.rest.actions.listWorkflowRuns({
                  owner: repoOwner,
                  repo: repoName,
                  workflow_id: workflowId,
                  branch: branchName,
                  status: 'in_progress'
                });

                // Check for in-progress workflows
                if (response.data.total_count === 0) {
                  console.log('No in-progress workflows found. Checking for completed workflows...');
                  const completedResponse = await github.rest.actions.listWorkflowRuns({
                    owner: repoOwner,
                    repo: repoName,
                    workflow_id: workflowId,
                    branch: branchName,
                    status: 'completed'
                  });

                  const latestRun = completedResponse.data.workflow_runs[0];
                  if (latestRun && latestRun.conclusion === 'success') {
                    console.log('Workflow completed successfully!');
                    completed = true;
                  } else if (latestRun && latestRun.conclusion === 'failure') {
                    throw new Error('Triggered workflow failed.');
                  }
                } else {
                  console.log('Waiting for triggered workflow to complete...');
                }

                // Wait before checking again
                await new Promise(resolve => setTimeout(resolve, 10000));
              }
            };

            await waitForWorkflow();
            

      - name: Download Translated Files
        if: ${{ steps.check-changes.outputs.properties_changed == 'true' || steps.check-changes.outputs.glossaries_changed == 'true' }}
        uses: actions/download-artifact@v3
        with:
          name: translated-files
          path: translated/

      - name: Commit Translated Files
        if: ${{ steps.check-changes.outputs.properties_changed == 'true' || steps.check-changes.outputs.glossaries_changed == 'true' }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          cp -r translated/* .
          git add src/main/resources/messages_*.properties
          git add src/main/resources/glossaries/*.csv
          git commit -m ":globe_with_meridians: Update translations"
          git push origin ${{ github.event.pull_request.head.ref }}

      - name: Create Pull Request
        if: ${{ steps.check-changes.outputs.properties_changed == 'true' || steps.check-changes.outputs.glossaries_changed == 'true' }}
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          commit-message: ":globe_with_meridians: Update translations"
          title: ":globe_with_meridians: Update translations for PR #${{ github.event.pull_request.number }}"
          body: |
            ## Automated Translation Updates
            Changes detected in:
            ${{ steps.check-changes.outputs.properties_changed == 'true' && '- messages_en.properties' || '' }}
            ${{ steps.check-changes.outputs.glossaries_changed == 'true' && '- glossaries files' || '' }}
            Original PR: #${{ github.event.pull_request.number }}
          branch: translations/pr-${{ github.event.pull_request.number }}
          base: main
          labels: automated-translation
          delete-branch: true